// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/apps": {
            "get": {
                "description": "Get all apps",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1"
                ],
                "summary": "Get all apps",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.App"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new app with the provided data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1"
                ],
                "summary": "Create a new app",
                "parameters": [
                    {
                        "description": "App data",
                        "name": "app",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.App"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.App"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/apps/{id}": {
            "get": {
                "description": "Get app by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1"
                ],
                "summary": "Get app by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "App ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.App"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/gpt/chat-completion": {
            "get": {
                "description": "基于OpenAI的Chat Completion API，生成对话文本。",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1"
                ],
                "summary": "使用OpenAI生成对话文本",
                "parameters": [
                    {
                        "type": "string",
                        "description": "对话角色",
                        "name": "role",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "对话内容",
                        "name": "content",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功生成对话文本",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "生成对话文本失败",
                        "schema": {}
                    }
                }
            }
        },
        "/v1/gpt/text-completion": {
            "get": {
                "description": "Generate text completion based on prompt",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1"
                ],
                "summary": "Generate Text Completion",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Prompt for text completion",
                        "name": "prompt",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Maximum number of tokens to generate",
                        "name": "max_tokens",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Generated text",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/prompt/{id}": {
            "get": {
                "description": "Retrieves a prompt by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1"
                ],
                "summary": "Retrieve a prompt by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Prompt ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/api.Prompt"
                        }
                    }
                }
            }
        },
        "/v2/prompt/{id}": {
            "get": {
                "description": "Retrieves a prompt by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v2"
                ],
                "summary": "Retrieve a prompt by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Prompt ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/api.Prompt"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.Prompt": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "common.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "model.App": {
            "type": "object",
            "properties": {
                "attrs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Attr"
                    }
                },
                "created_at": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "integer"
                }
            }
        },
        "model.Attr": {
            "type": "object",
            "properties": {
                "app_id": {
                    "type": "integer"
                },
                "context": {
                    "description": "内容",
                    "type": "string"
                },
                "created_at": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "description": "Tab",
                    "type": "string"
                },
                "type": {
                    "description": "1 chat completion 2 img",
                    "type": "integer"
                },
                "updated_at": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "OPENAI",
	Description:      "This is a API documentation for OPENAI.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
